# Use the latest stable version of Semaphore 2.0 YML syntax:
version: v1.0

# Name your pipeline. In case you connect multiple pipelines with promotions,
# the name will help you differentiate between, for example, a CI build phase
# and delivery phases.
name: CRM App

# An agent defines the environment in which your code runs.
# It is a combination of one of available machine types and operating
# system images.
# See https://docs.semaphoreci.com/article/20-machine-types
# and https://docs.semaphoreci.com/article/32-ubuntu-1804-image
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

global_job_config:
  prologue:
    commands:
      # Checkout code from Git repository. This step is mandatory if the
      # job is to work with your code.
      # Optionally you may use --use-cache flag to avoid roundtrip to
      # remote repository.
      # See https://docs.semaphoreci.com/article/54-toolbox-reference#checkout
      - checkout
      # Restore dependencies from cache.
      # Read about caching: https://docs.semaphoreci.com/article/149-caching
      - cache restore
      # Set Ruby version:
      - sem-version ruby 2.7.1
      - sem-version node 14
      - bundle config set deployment 'true'
      - bundle config set path 'vendor/bundle'
      - bundle install -j 4
      - yarn --cwd client install

blocks:
  - name: Setup
    dependencies: []
    task:
      jobs:
        - name: bundle
          commands:
          # Store the latest version of dependencies in cache,
          # to be used in next blocks and future workflows:
          - cache store

  - name: Backend Tests
    dependencies:
      - Setup
    task:
      secrets:
      - name: rails_secret

      prologue:
        commands:
          - sem-service start postgres
          - psql -U postgres -h localhost -c "CREATE USER semaphore with password 'sempahore'"
          - psql -U postgres -h localhost -c "ALTER USER semaphore WITH SUPERUSER;"
          - bundle exec rails db:setup
          - bundle exec rails db:schema:load

      jobs:
      - name: RSpec - backend tests
        commands:
          - bundle exec rspec

  - name: Frontend tests
    dependencies:
      - Backend Tests
    task:
      jobs:
      - name: Jest - frontend tests
        commands:
          - yarn --cwd client test
